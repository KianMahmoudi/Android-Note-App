package com.example.note;import android.content.Intent;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.room.Room;import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.textfield.TextInputEditText;import java.util.ArrayList;import java.util.List;public class ListNoteActivity extends AppCompatActivity {    private LinearLayout container;    private FloatingActionButton fabAdd;    private ExtendedFloatingActionButton saveBtn;    private AppDatabase db;    private LayoutInflater inflater;    private TextView title;    @Override    protected void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.list_note);        ImageView btnClose = findViewById(R.id.btn_close_simpleNote);        btnClose.setOnClickListener(v -> finish());        container = findViewById(R.id.conteiner);        fabAdd = findViewById(R.id.fab_addCheckbox);        saveBtn = findViewById(R.id.fab_save_listNote);        inflater = getLayoutInflater();        title = findViewById(R.id.note_title);        db = Room.databaseBuilder(getApplicationContext(),                AppDatabase.class, "notes").allowMainThreadQueries().build();        if (getIntent().hasExtra("id")) {            long id = getIntent().getLongExtra("id", 0);            ListNote listNote = db.getListNoteDao().getById(id);            if (listNote != null) {                title.setText(listNote.getTitle());            }            List<ListNoteItems> items = listNote.getItems();            for (ListNoteItems item : items) {                View itemView = inflater.inflate(R.layout.checkbox_edittext_item, container, false);                EditText editText = itemView.findViewById(R.id.editText);                CheckBox checkBox = itemView.findViewById(R.id.checkBox);                editText.setText(item.getDescription());                checkBox.setChecked(item.isChecked());                container.addView(itemView);            }        }        if (inflater != null && container != null && !getIntent().hasExtra("id")) {            View view = inflater.inflate(R.layout.checkbox_edittext_item, container, false);            container.addView(view);        }        saveBtn.setOnClickListener(v -> {            if (getIntent().hasExtra("id")) {                long id = getIntent().getLongExtra("id", 0);                ListNote listNote = db.getListNoteDao().getById(id);                listNote.setTitle(title.getText().toString());                List<ListNoteItems> items = new ArrayList<>();                for (int i = 0; i < container.getChildCount(); i++) {                    View view = container.getChildAt(i);                    TextInputEditText editText = view.findViewById(R.id.editText);                    CheckBox checkBox = view.findViewById(R.id.checkBox);                    if (editText != null && checkBox != null) {                        String itemText = editText.getText().toString();                        boolean isChecked = checkBox.isChecked();                        if (itemText != null) {                            ListNoteItems item = new ListNoteItems(itemText, isChecked);                            if (item != null) {                                items.add(item);                            }                        }                    }                }                listNote.setItems(items);                db.getListNoteDao().update(listNote);                Intent i = new Intent(this, HomePage.class);                i.putExtra("class", "listNote");                startActivity(i);            } else {                String title = this.title.getText().toString();                List<ListNoteItems> items = new ArrayList<>();                for (int i = 0; i < container.getChildCount(); i++) {                    View view = container.getChildAt(i);                    TextInputEditText editText = view.findViewById(R.id.editText);                    CheckBox checkBox = view.findViewById(R.id.checkBox);                    if (editText != null && checkBox != null) {                        String itemText = editText.getText().toString();                        boolean isChecked = checkBox.isChecked();                        if (itemText != null) {                            ListNoteItems item = new ListNoteItems(itemText, isChecked);                            if (item != null) {                                items.add(item);                            }                        }                    }                }                saveToDatabase(title, items);            }        });        fabAdd.setOnClickListener(v -> {            if (inflater != null && container != null) {                View view = inflater.inflate(R.layout.checkbox_edittext_item, container, false);                container.addView(view);            }        });    }    private void saveToDatabase(String title, List<ListNoteItems> items) {        ListNote note = new ListNote(title, items);        db.getListNoteDao().insert(note);        Intent i = new Intent(this, HomePage.class);        i.putExtra("class", "listNote");        startActivity(i);    }    @Override    public void onBackPressed() {        super.onBackPressed();        Intent i = new Intent(this, HomePage.class);        i.putExtra("class", "listNote");        startActivity(i);        finish();    }}